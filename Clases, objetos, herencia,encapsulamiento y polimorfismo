# Definición de la clase base
class Animal:
    def __init__(self, name):
        self._name = name  # Encapsulación de atributo protegido

    def make_sound(self):
        pass  # Método que será sobrescrito en las clases derivadas

    def get_name(self):
        return self._name


# Clase derivada que hereda de Animal
class Dog(Animal):
    def __init__(self, name):
        super().__init__(name)

    def make_sound(self):
        return "Woof!"


# Clase derivada que también hereda de Animal
class Cat(Animal):
    def __init__(self, name):
        super().__init__(name)

    def make_sound(self):
        return "Meow!"


# Función que demuestra polimorfismo
def animal_sound(animal):
    print(f"{animal.get_name()} says {animal.make_sound()}")


# Creación de instancias y demostración del programa
if __name__ == "__main__":
    dog = Dog("Buddy")
    cat = Cat("Whiskers")

    print("Dog name:", dog.get_name())
    print("Cat name:", cat.get_name())

    animal_sound(dog)
    animal_sound(cat)


# Reservar vuelo para el pasajero
pasajero1.reservar_vuelo(vuelo1, 2)

